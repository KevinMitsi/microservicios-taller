pipeline {
    agent any

    tools {
        maven 'Maven'
        jdk 'JDK-21'
    }

    environment {
        SONAR_HOST_URL = 'http://sonarqube:9000'
        SONAR_PROJECT_KEY = 'msvc-security'
        SONAR_PROJECT_NAME = 'MSVC Security'
        MAVEN_OPTS = '-Xmx1024m'
    }

    stages {
        stage('Checkout') {
            steps {
                echo '🔄 Clonando repositorio...'
                checkout scm
                echo '✅ Repositorio clonado exitosamente'
            }
        }

        stage('Clean') {
            steps {
                dir('msvc-security') {
                    echo '🧹 Limpiando workspace...'
                    bat 'mvn clean'
                    echo '✅ Workspace limpio'
                }
            }
        }

        stage('Build') {
            steps {
                dir('msvc-security') {
                    echo '🔨 Compilando proyecto...'
                    bat 'mvn compile -DskipTests'
                    echo '✅ Proyecto compilado exitosamente'
                }
            }
        }

        stage('Unit & Integration Tests') {
            steps {
                dir('msvc-security') {
                    echo '🧪 Ejecutando pruebas unitarias e integración...'
                    bat 'mvn test'
                    echo '✅ Pruebas completadas'
                }
            }
            post {
                always {
                    dir('msvc-security') {
                        junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                    }
                }
            }
        }

        stage('Code Coverage') {
            steps {
                dir('msvc-security') {
                    echo '📊 Generando reporte de cobertura con JaCoCo...'
                    bat 'mvn jacoco:report'
                    echo '✅ Reporte de cobertura generado'
                }
            }
            post {
                always {
                    dir('msvc-security') {
                        jacoco(
                            execPattern: '**/target/jacoco.exec',
                            classPattern: '**/target/classes',
                            sourcePattern: '**/src/main/java',
                            exclusionPattern: '**/*Test*.class,**/*Config*.class,**/*Application*.class'
                        )
                    }
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('msvc-security') {
                    echo '🔍 Iniciando análisis de calidad con SonarQube...'
                    withSonarQubeEnv('SonarQube') {
                        bat """
                            mvn sonar:sonar ^
                            -Dsonar.projectKey=%SONAR_PROJECT_KEY% ^
                            -Dsonar.projectName="%SONAR_PROJECT_NAME%" ^
                            -Dsonar.host.url=%SONAR_HOST_URL% ^
                            -Dsonar.java.binaries=target/classes ^
                            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml ^
                            -Dsonar.junit.reportPaths=target/surefire-reports
                        """
                    }
                    echo '✅ Análisis de SonarQube completado'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                echo '⏳ Esperando resultado del Quality Gate...'
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: false
                }
                echo '✅ Quality Gate verificado'
            }
        }

        stage('Cucumber Reports') {
            steps {
                dir('msvc-security') {
                    echo '🥒 Generando reportes de Cucumber...'
                    bat 'mvn verify -DskipUnitTests=false'
                    echo '✅ Reportes de Cucumber generados'
                }
            }
            post {
                always {
                    dir('msvc-security') {
                        cucumber buildStatus: 'UNSTABLE',
                                reportTitle: 'Cucumber BDD Test Report',
                                fileIncludePattern: '**/cucumber-reports/*.json',
                                trendsLimit: 10,
                                failedFeaturesNumber: -1,
                                failedScenariosNumber: -1,
                                classifications: [
                                    [key: 'Microservicio', value: 'Security'],
                                    [key: 'Ambiente', value: 'CI/CD'],
                                    [key: 'Framework', value: 'Cucumber + Spring Boot']
                                ]
                    }
                }
            }
        }

        stage('Publish Reports') {
            steps {
                dir('msvc-security') {
                    echo '📈 Publicando reportes en Jenkins...'

                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'target/site/jacoco',
                        reportFiles: 'index.html',
                        reportName: 'JaCoCo Coverage Report',
                        reportTitles: 'Code Coverage'
                    ])

                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'target/cucumber-html-reports',
                        reportFiles: 'overview-features.html',
                        reportName: 'Cucumber HTML Report',
                        reportTitles: 'BDD Test Results'
                    ])

                    echo '✅ Reportes publicados exitosamente'
                }
            }
        }

        stage('Report Results') {
            steps {
                script {
                    echo '📋 ======================================'
                    echo '📋 RESUMEN DE EJECUCIÓN DEL PIPELINE'
                    echo '📋 ======================================'
                    echo "📦 Proyecto: ${env.JOB_NAME}"
                    echo "🔢 Build: #${env.BUILD_NUMBER}"
                    echo "🌿 Rama: ${env.GIT_BRANCH}"
                    echo "👤 Usuario: Kevin Andres Garcia Aguirre"
                    echo '📋 ======================================'
                    echo '✅ Etapas Completadas:'
                    echo '   ✓ Checkout'
                    echo '   ✓ Clean'
                    echo '   ✓ Build'
                    echo '   ✓ Unit & Integration Tests'
                    echo '   ✓ Code Coverage'
                    echo '   ✓ SonarQube Analysis'
                    echo '   ✓ Quality Gate'
                    echo '   ✓ Cucumber Reports'
                    echo '   ✓ Publish Reports'
                    echo '📋 ======================================'
                    echo '📊 Reportes Disponibles:'
                    echo "   🔗 Test Results: ${env.BUILD_URL}testReport/"
                    echo "   🔗 Coverage: ${env.BUILD_URL}JaCoCo_Coverage_Report/"
                    echo "   🔗 Cucumber: ${env.BUILD_URL}cucumber-html-reports/"
                    echo "   🔗 SonarQube: ${SONAR_HOST_URL}/dashboard?id=${SONAR_PROJECT_KEY}"
                    echo '📋 ======================================'
                    echo '🎉 Pipeline completado exitosamente!'
                    echo '📋 ======================================'
                }
            }
        }
    }

    post {
        success {
            echo '✅ ¡BUILD EXITOSO! 🎉'
            echo '✅ Todos los tests pasaron'
            echo '✅ Código cumple con estándares de calidad'
        }

        failure {
            echo '❌ BUILD FALLIDO'
            echo '⚠️ Revisa los logs para identificar el problema'
            echo '📊 Verifica los reportes de tests y SonarQube'
        }

        unstable {
            echo '⚠️ BUILD INESTABLE'
            echo '⚠️ Algunos tests fallaron o hay issues de calidad'
            echo '📊 Revisa los reportes para más detalles'
        }

        always {
            echo '🧹 Pipeline finalizado - workspace se mantendrá para análisis'
        }
    }
}